name: Sync Latest Release to pre Branch

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * 2"  # 每周二凌晨 2 点运行一次

jobs:
  update-pre-branch:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout pre 分支
        uses: actions/checkout@v3
        with:
          ref: pre
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 安装 jq 和 wget
        run: sudo apt-get update && sudo apt-get install -y jq wget

      - name: 获取最新 release 的下载链接、版本号和备注
        id: fetch_release
        run: |
          api_data=$(curl -s https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases)
          url=$(echo "$api_data" | jq -r 'map(select(.prerelease == false))[0].assets[] | select(.name == "_worker.js") | .browser_download_url')
          version=$(echo "$api_data" | jq -r 'map(select(.prerelease == false))[0].tag_name')
          body=$(echo "$api_data" | jq -r 'map(select(.prerelease == false))[0].body')
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 检查是否为新版本
        id: check_version
        run: |
          if [[ -f _version.txt ]] && [[ "$(cat _version.txt)" == "${{ steps.fetch_release.outputs.version }}" ]]; then
            echo "is_new=false" >> $GITHUB_OUTPUT
          else
            echo "is_new=true" >> $GITHUB_OUTPUT
          fi

      - name: 调试 release 内容
        if: steps.check_version.outputs.is_new == 'true'
        run: |
          echo "URL: ${{ steps.fetch_release.outputs.url }}"
          echo "VERSION: ${{ steps.fetch_release.outputs.version }}"
          echo "BODY:"
          echo "${{ steps.fetch_release.outputs.body }}"

      - name: 下载 _worker.js 和写入版本号及更新日志
        if: steps.check_version.outputs.is_new == 'true'
        run: |
          wget -q "${{ steps.fetch_release.outputs.url }}" -O _worker.js
          echo "${{ steps.fetch_release.outputs.version }}" > _version.txt

          cat <<EOF >> update.log

---
Version: ${{ steps.fetch_release.outputs.version }}
Updated at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
Release Notes:
${{ steps.fetch_release.outputs.body }}
EOF

      - name: 设置 Git 身份
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: 检查是否有更改并提交
        if: steps.check_version.outputs.is_new == 'true'
        run: |
          if ! git diff --quiet; then
            echo "检测到文件变化，准备提交"
            git add _worker.js _version.txt update.log
            git commit -m "Update _worker.js to ${{ steps.fetch_release.outputs.version }} with changelog"
            git push origin pre
          else
            echo "没有变化，跳过提交"
          fi
